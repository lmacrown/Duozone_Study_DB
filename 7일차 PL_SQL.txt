PL/SQL : SQL만으로 작업하기 어려울 경우에 미리 서버에서 함수나 프로시저를 만들어서 쉽고 편하며 성능을 향상시킴
데이터베이스 관련 특정 작업을 수행하는 명령어와 실행에 필요한 여러 요소를 정의하는 명령어 등으로 구성
블록 : 명령어를 모아 둔 PL/SQL 프로그램의 기본 단위
- 선언부 : 실행에 사용될 변수, 상수, 커서 등을 선언
- 실행부 : 조건문, 반복문, selecet,dml 등을 정의
- 예외처리부 : 실행 도중에 발생하는 오류를 해결하는 문장 기술
주의점
1. 블록을 구성하는 declare, begin, exception 키워드에는 세미클론은 사용하지 않음
2. 블록의 각 부분에서 실행해야 하는 문장 끝에는 세미클론을 사용
3. 내부에서 한 줄 주석과 여러 줄 주석을 사용할 수 있음
4. 작성을 마치고 실행하기 위해 마지막에 슬래시를 사용
declare : 선언부 시작
dbms_output.put_line : 출력
/ : 작성한 PL/SQL을 실행
constant : 상수 선언
null : 자료형 다음에 입력 ex. v_deptno number(2) not null
변수 이름 설정시 주의점
1. 같은 블록 안에서 식별자는 고유해야 하며 중복될 수 없음
2. 대, 소문자 구별하지 않음
3. 테이블 이름 붙이는 규칙과 같은 규칙을 따름(문자로 시작, 30byte 이하, 키워드 이름 사용불가)
스칼라 : 숫자, 문자열, 날짜 등과 같이 오라클에서 기본으로 정의해 놓은 자료형. 내부 구성 요소가 없는 단일 값
참조형 : 오라클 데이터베이스에 존재하는 특정 테이블 열의 자료형이나 하나의 행 구조를 참조하는 자료형
ex. v_empno2 emp.empno%type : emp에 해당하는 모든 변수의 타입이 해당 타입으로 변경됨

조건문
if : 조건에 타당하면 해당 구문 실행
else if : if문에 해당되지 않고 다음구문 실행
end if : if문 종결
case : 여러 조건식을 나열하여 조건식에 맞는 작업 수행
loop : 기본 반복문
while loop : 특정 조건식의 결과를 통해 반복 수행
for loop : 반복 횟수를 정하여 반복 수행
cusor for loop : 커서를 활용한 반복 수행
exit : 수행중인 반복 종료
exit-when : 반복 종료를 위한 조건식을 지정하고 만족하면 반복 종료
continue : 현재 주기를 건너뜀

레코드 : 자료형이 각기 다른 데이터를 하난의 변수에 저장
연관 배열 : 인덱스(키)와 값으로 구성되는 컬렉션
컬렉션 메서드 : 컬렉션과 관련된 다양한 정보 조회 기능을 제공
- exists : 데이터 존재 여부를 true/false로 반환
- count : 요소 개수를 반환
- limit : 최대 크기 반환
- first : 첫 번째 인덱스 번호 반환
- last : 마지막 인덱스 번호 반환
- prior : n인덱스 앞 인덱스 값을 반환
- next : n인덱스 바로 다음 인덱스 값 반환
- delete : 저장된 요소 지움
- extend : 컬렉션 크기를 증가
- trim : 컬렉션 크기를 감소
- sys.diutil.bool_ti_int : boolean 값을 숫자로 출력

커서 : select문 또는 데이터 조작어 같은 SQL문을 실행했을 떄 해당 SQL문을 처리하는 정보를 저장한 메모리 공간
명시적 커서와 묵시적 커서로 나눔
명시적 커서
1) 커서 선언 : 사용자가 직접 이름을 지정하여 사용할 커서를 SQL문과 함께 선언
2) 커서 열기 : 커서를 선언할 때 작성한 SQl문을 실행
3) 커서에서 읽어온 데이터 사용 : 실행된 SQL문의 결과 행 정보를 하나씩 읽어와서 변수에 저장한 후 작업 수행
4) 커서 닫기 : 커서 종료
- 커서이름%FOUND : FETCH문을 통해 추출된 행이 있으면 true, 없으면 false
- 커서이름%ROWCOUNT : 현재까지 추출된 행 수를 반환
- 커서이름%SIOPEN : 커서가 열려 있으면 true, 닫혀 있으면 false
커서 파라미터 : 커서에 파라미터 이름 자료형을 입력하여 지정된 값을 가져오게 설정함
& : 입력한 값을 변수에 저장함
묵시적 커서 : 오라클에서 자동으로 실행되는 커서
오류 : SQL 또는 PL/SQL이 정상 수행되지 못하는 상황
오류가 발생하면 아랫문장은 실행되지 않음
사전 정의된 예외 : 내부 예외 중 예외 번호에 해당하는 이름이 존재하는 예외
이름이 없는 예외 : 내부 예외 중 이름이 존재하지 않는 예외
사용자 정의 예외 : 사용자가 필요에 따라 직접 정의한 예외
SQLCODE : 오류 번호를 반환하는 함수
SQLERRM : 오류 메시지를 반환하는 함수

익명 블록 : 이름이 정해져 있지 않은 PL/SQL. 단 한번만 실행됨
저장 서버프로그램 : 이름을 지정하여 오라클에 저장해 두어 패키지, 프로시저, 함수에 저장해 둠
- 저장 프로시저 : 일반적으로 특정 처리 작업 수행. SQL문에서는 사용할 수 없음
- 저장 함수 : 일반적으로 특정 연산을 거친 결과 값을 반환. SQL문에서 사용 가능
- 패키지 : 저장 서브프로그램을 그룹화하는 데 사용
- 트리거 : 특정 상황이 발생할 때 자동으로 연달아 수행
프로시저 : 특정 처리 작업을 수행하는 데 사용하는 저장 서브프로그램. 파라미터 사용가능
user_source : 프로시저를 포함하여 서브프로그램의 소스 코드 내용을 확인
A->B : A가 key가 되고 B가 value가 됨
inout : In, Out으로 선언한 파라미터 기능을 동시에 수행
show errors : 가장 최근의 오류출력

패키지 : 업무나 기능 면에서 연관성이 높은 프로시저, 함수 등 여러 개의 PL/SQL서버프로그램을 
하나의 논리 그룹으로 묶어 통합 관리하는 데 사용하는 객체
- 모듈성 : 여러 PL/SQL 구성 요소를 모듈화가 가능
- 쉬운 응용프로그램 설계 : 완성하지 않아도 정의가 가능(인터페이스)
- 정보 은닉 : 외부 노출 또는 접근 여부를 지정가능
- 기능성 향상 : 변수, 커서, 예외 등도 각 세션이 유지되는 동안 선언해서 공용으로 사용가능
- 성능 향상 : 패키지에 포함된 모든 서브프로그램이 메모리에 한 번에 로딩 됨
패키지는 재정의가 가능함

